name: Build & Deploy Spring App

on:
  push:
    branches:
      - main  

jobs:
  build-deploy:
    name: Build and Deploy Spring Boot for Beginners
    runs-on: ubuntu-latest  

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ✅ Since this project uses JDK 17 we should  install Java 17 in the runner
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Run Unit Test
        run: mvn -B test --file pom.xml

      - name: Build the Application
        run: |  
          mvn clean
          mvn -B package --file pom.xml


      - name: Build Docker Image
        uses: docker/build-push-action@v4  #this command will try to build an image out of the dockefile that were need to specify
        with:
          context: .   #here we specify the path for our dockerfile since we r in the root and so does our dockerfile so we put a .
          dockerfile: Dockerfile  #name of our dockerfile
          push: false  #we put it in false because in this step we want to check if we can build this image or not
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-for-beginners:latest #  dockerhub username 
          #now we need to login to dockerhub

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}


      - name: Push to docker
        uses:  docker/build-push-action@v4

        with:
          context: .   #here we specify the path for our dockerfile since we r in the root and so does our dockerfile so we put a .
          dockerfile: Dockerfile  #name of our dockerfile
          push: true  #we put it in true because in this step we want to check if we want to build it 
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-for-beginners:latest #  dockerhub username 


          

        



# ✅ mvn → Calls Apache Maven, a popular build automation tool for Java projects.
# ✅ -B → Runs Maven in batch mode (non-interactive) to prevent prompts from interrupting CI/CD.
# ✅ test → Runs unit tests defined in the Maven project.
# ✅ --file pom.xml → Explicitly specifies the pom.xml file (the Maven project configuration file).
